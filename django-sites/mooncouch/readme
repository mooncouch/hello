journal site/app

Questions
How to loop through values of a dictionary value?
#I assign an the first entry to entry1 with
from journal.models import Author, Entry
entry1 = Entry.objects.filter(id=1).values()
#can not loop with
for i in entry1.values():
    print(i)
#also tried - says error, returns too many values)
for k, v in entry1.values():
    print(k, v)
#also tried - says error, returns too many values)
for k, v in entry1.values():
    print(k)
    print(v)

#code in template
<h1>{{ entry.id }} {{entry.title}} </h1>
<ul>
{% for k, v in Entry.objects.filter(id=1).values() %}
    <li>{{ k, v }}</li>
{% endfor %}
</ul>




I go to add an entry to the author class and get an error. What is wrong?
>>> me.entry_set.all()


#assign author object with:
me = Author.objects.filter(id=1)
In [90]: me
Out[90]: <QuerySet [<Author: mooncouch (cottell.andrew@gmail.com)>]>


How to use the doc references correctly?
#the following code creates an error and says 
# ValueError: Cannot assign "<QuerySet [<Author: mooncouch (cottell.andrew@gmail.com)>]>": "Entry.author" must be a "Author" instance.
In [96]: entry3 = Entry.objects.create(author=me, title='third')

#tried variation - same error
 entry3 = Entry.objects.create(author=Author.objects.filter(id=1), title
    ...: ='third')

#other doc try - same error
 e3 = Entry(author=me, title='third')

<QuerySet []>
>>> me.entry_set.create(title="first entry", instrument="AMD", setup="inside bar")
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/sqlite3/base.py", line 303, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.IntegrityError: NOT NULL constraint failed: journal_entry.entry_date

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/fields/related_descriptors.py", line 623, in create
    return super(RelatedManager, self.db_manager(db)).create(**kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/query.py", line 417, in create
    obj.save(force_insert=True, using=self.db)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/base.py", line 729, in save
    force_update=force_update, update_fields=update_fields)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/base.py", line 759, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/base.py", line 842, in _save_table
    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/base.py", line 880, in _do_insert
    using=using, raw=raw)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/query.py", line 1125, in _insert
    return query.get_compiler(using=using).execute_sql(return_id)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 1281, in execute_sql
    cursor.execute(sql, params)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 100, in execute
    return super().execute(sql, params)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 68, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 77, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/sqlite3/base.py", line 303, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.IntegrityError: NOT NULL constraint failed: journal_entry.entry_date



After another try
>>> me.entry_set.create(title="first entry", instrument="AMD", setup="inside bar", entry_date=now, exit_date=now)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/fields/related_descriptors.py", line 623, in create
    return super(RelatedManager, self.db_manager(db)).create(**kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/query.py", line 415, in create
    obj = self.model(**kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/base.py", line 495, in __init__
    raise TypeError("'%s' is an invalid keyword argument for this function" % kwarg)
TypeError: 'entry_date' is an invalid keyword argument for this function

Old Questions
How to get multiple objects? CLASS.Objects.get() raises an error when it returns more than 1 object.
With CLASS.objects.all()
How to add entries to the author class?
with .save()
How to remove an author?
.delete()
How do I get all the attributes of a class? I can not get the Entry attributes.
How to get the attributes of an instance?

In [117]: Author.objects.filter(id=1).values()
Out[117]: <QuerySet [{'id': 1, 'name': 'mooncouch', 'email': 'cottell.andrew@gmail.com'}]>

In [118]: Entry.objects.filter(id=1).values()
Out[118]: <QuerySet [{'id': 1, 'author_id': 1, 'title': 'first entry', 'entry_date': datetime.datetime(2018, 9, 10, 4, 11, 23, 833294, tzinfo=<UTC>), 'instrument': 'a', 'setup': 'a', 'quantity': 0, 'stop_loss': 0, 'take_profit': 0, 'expiration_date': datetime.datetime(2018, 9, 10, 4, 11, 23, 833328, tzinfo=<UTC>), 'strike': 0, 'premium': 0, 'theta': 0, 'delta': 0, 'vega': 0, 'exit_date': datetime.datetime(2018, 9, 10, 4, 11, 23, 833347, tzinfo=<UTC>), 'exit_price': 0, 'pl': 0, 'breakeven': 0, 'fees': 0, 'highest_price': 0, 'lowest_price': 0, 'notes': 'a', 'screenshots': ''}]>
