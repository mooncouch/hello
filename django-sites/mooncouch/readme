journal site/app

Questions
How to get multiple objects? CLASS.Objects.get() raises an error when it returns more than 1 object.
With CLASS.objects.all()
How to add entries to the author class?
with .save()
How to remove an author?
.delete()

Having issues getting the entry objects from the Author, how to?

n [17]: Entry.objects.filter(author="mooncouch")
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-17-73cf028a160b> in <module>()
----> 1 Entry.objects.filter(author="mooncouch")

/anaconda3/lib/python3.6/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     80         def create_method(name, method):
     81             def manager_method(self, *args, **kwargs):
---> 82                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     83             manager_method.__name__ = method.__name__
     84             manager_method.__doc__ = method.__doc__

/anaconda3/lib/python3.6/site-packages/django/db/models/query.py in filter(self, *args, **kwargs)
    842         set.
    843         """
--> 844         return self._filter_or_exclude(False, *args, **kwargs)
    845
    846     def exclude(self, *args, **kwargs):

/anaconda3/lib/python3.6/site-packages/django/db/models/query.py in _filter_or_exclude(self, negate, *args, **kwargs)
    860             clone.query.add_q(~Q(*args, **kwargs))
    861         else:
--> 862             clone.query.add_q(Q(*args, **kwargs))
    863         return clone
    864

/anaconda3/lib/python3.6/site-packages/django/db/models/sql/query.py in add_q(self, q_object)
   1261         # So, demotion is OK.
   1262         existing_inner = {a for a in self.alias_map if self.alias_map[a].join_type == INNER}
-> 1263         clause, _ = self._add_q(q_object, self.used_aliases)
   1264         if clause:
   1265             self.where.add(clause, AND)

/anaconda3/lib/python3.6/site-packages/django/db/models/sql/query.py in _add_q(self, q_object, used_aliases, branch_negated, current_negated, allow_joins, split_subq)
   1285                     child, can_reuse=used_aliases, branch_negated=branch_negated,
   1286                     current_negated=current_negated, allow_joins=allow_joins,
-> 1287                     split_subq=split_subq,
   1288                 )
   1289                 joinpromoter.add_votes(needed_inner)

/anaconda3/lib/python3.6/site-packages/django/db/models/sql/query.py in build_filter(self, filter_expr, branch_negated, current_negated, can_reuse, allow_joins, split_subq, reuse_with_filtered_relation)
   1223             col = targets[0].get_col(alias, join_info.final_field)
   1224
-> 1225         condition = self.build_lookup(lookups, col, value)
   1226         lookup_type = condition.lookup_name
   1227         clause.add(condition, AND)

/anaconda3/lib/python3.6/site-packages/django/db/models/sql/query.py in build_lookup(self, lookups, lhs, rhs)
   1094                 return
   1095
-> 1096         lookup = lookup_class(lhs, rhs)
   1097         # Interpret '__exact=None' as the sql 'is NULL'; otherwise, reject all
   1098         # uses of None as a query value unless the lookup supports it.

/anaconda3/lib/python3.6/site-packages/django/db/models/lookups.py in __init__(self, lhs, rhs)
     18     def __init__(self, lhs, rhs):
     19         self.lhs, self.rhs = lhs, rhs
---> 20         self.rhs = self.get_prep_lookup()
     21         if hasattr(self.lhs, 'get_bilateral_transforms'):
     22             bilateral_transforms = self.lhs.get_bilateral_transforms()

/anaconda3/lib/python3.6/site-packages/django/db/models/fields/related_lookups.py in get_prep_lookup(self)
    113                 # as we don't get to the direct value branch otherwise.
    114                 target_field = self.lhs.output_field.get_path_info()[-1].target_fields[-1]
--> 115                 self.rhs = target_field.get_prep_value(self.rhs)
    116
    117         return super().get_prep_lookup()

/anaconda3/lib/python3.6/site-packages/django/db/models/fields/__init__.py in get_prep_value(self, value)
    963         if value is None or isinstance(value, OuterRef):
    964             return value
--> 965         return int(value)
    966
    967     def contribute_to_class(self, cls, name, **kwargs):

ValueError: invalid literal for int() with base 10: 'mooncouch'

In [18]: Entry.objects.filter(author="1")
Out[18]: <QuerySet [<Entry: first entry (mooncouch)>, <Entry: second entry (mooncouch)>]>




How to return all objects with Ids? The follow lines didn't work
>>> Author.objects.filter(author='entry').values_list('id', flat=True)
>>> Author.objects.filter(author='name').values_list('id', flat=True)


I go to add an entry to the author class and get an error. What is wrong?
>>> me.entry_set.all()
<QuerySet []>
>>> me.entry_set.create(title="first entry", instrument="AMD", setup="inside bar")
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/sqlite3/base.py", line 303, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.IntegrityError: NOT NULL constraint failed: journal_entry.entry_date

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/fields/related_descriptors.py", line 623, in create
    return super(RelatedManager, self.db_manager(db)).create(**kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/query.py", line 417, in create
    obj.save(force_insert=True, using=self.db)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/base.py", line 729, in save
    force_update=force_update, update_fields=update_fields)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/base.py", line 759, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/base.py", line 842, in _save_table
    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/base.py", line 880, in _do_insert
    using=using, raw=raw)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/query.py", line 1125, in _insert
    return query.get_compiler(using=using).execute_sql(return_id)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/sql/compiler.py", line 1281, in execute_sql
    cursor.execute(sql, params)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 100, in execute
    return super().execute(sql, params)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 68, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 77, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/utils.py", line 85, in _execute
    return self.cursor.execute(sql, params)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/backends/sqlite3/base.py", line 303, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.IntegrityError: NOT NULL constraint failed: journal_entry.entry_date



After another try
>>> me.entry_set.create(title="first entry", instrument="AMD", setup="inside bar", entry_date=now, exit_date=now)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/fields/related_descriptors.py", line 623, in create
    return super(RelatedManager, self.db_manager(db)).create(**kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/query.py", line 415, in create
    obj = self.model(**kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/db/models/base.py", line 495, in __init__
    raise TypeError("'%s' is an invalid keyword argument for this function" % kwarg)
TypeError: 'entry_date' is an invalid keyword argument for this function
